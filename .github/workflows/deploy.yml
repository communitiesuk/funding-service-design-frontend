name: Deploy to Gov PaaS

on:
  workflow_dispatch:
    inputs:
      environment:
        description:  Which AWS Account to use
        type: choice
        required: true
        options:
        - test
        - uat
      copilot:
        description: Whether to deploy to AWS?
        type: boolean
        required: false
        default: false
      deploy_to_dev:
        required: false
        default: false
        type: boolean
        description: Deploy to CloudFoundry dev?
  push:
    paths-ignore:
      - '**/README.md'

jobs:
  test_and_deploy:
    if: ${{ github.actor != 'dependabot[bot]' && !github.event.inputs.copilot }}
    uses: communitiesuk/funding-service-design-workflows/.github/workflows/deploy.yml@main
    with:
      app_name: ${{ github.event.repository.name }}
      api: false
      assets_required: true
      deploy_to_dev: true
      include_manifest: true
      run_performance_tests: true
      run_e2e_tests: true
    secrets:
      CF_API: ${{secrets.CF_API}}
      CF_ORG: ${{secrets.CF_ORG}}
      CF_SPACE: ${{secrets.CF_SPACE}}
      CF_USER: ${{secrets.CF_USERNAME}}
      CF_PASSWORD: ${{secrets.CF_PASSWORD}}
      E2E_PAT: ${{secrets.E2E_PAT}}
      RSA256_PUBLIC_KEY_BASE64: ${{secrets.RSA256_PUBLIC_KEY_BASE64}}
      RSA256_PRIVATE_KEY_BASE64: ${{secrets.RSA256_PUBLIC_KEY_BASE64}}
      SENTRY_DSN: ${{secrets.SENTRY_DSN}}
      FORMS_SERVICE_PRIVATE_HOST: ${{secrets.FORMS_SERVICE_PRIVATE_HOST}}
  paketo_build:
    permissions:
      packages: write
    uses: ./.github/workflows/package.yml
    with:
      version_to_build: $(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
  pre_deploy_tests:
    if: ${{ github.event.inputs.copilot }}
    secrets:
      E2E_PAT: ${{secrets.E2E_PAT}}
    uses: communitiesuk/funding-service-design-workflows/.github/workflows/pre-deploy.yml@main
    with:
      postgres_unit_testing: false
  copilot_build:
    if: ${{ github.event.inputs.copilot }}
    concurrency: deploy-${{ inputs.environment || 'test' }}
    permissions:
      id-token: write # This is required for requesting the JWT
      contents: read  # This is required for actions/checkout
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment || 'test' }}
    steps:
    - name: Git clone the repository
      uses: actions/checkout@v3

    - name: Get current date
      id: currentdatetime
      run: echo "datetime=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_OUTPUT

    - name: configure aws credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT }}:role/GithubCopilotDeploy
        role-session-name: FRONTEND_COPILOT_${{ steps.currentdatetime.outputs.datetime }}
        aws-region: eu-west-2

    - name: Install AWS Copilot CLI
      run: |
        curl -Lo aws-copilot https://github.com/aws/copilot-cli/releases/latest/download/copilot-linux && chmod +x aws-copilot && sudo mv aws-copilot /usr/local/bin/copilot

    - name: Inject Git SHA into manifest
      run: |
        yq -i '.variables.GITHUB_SHA = "${{ github.sha }}"'  copilot/fsd-frontend/manifest.yml

    - name: Inject RSA256_PUBLIC_KEY_BASE64 into manifest
      run: |
        yq -i '.variables.RSA256_PUBLIC_KEY_BASE64 = "${{ secrets.RSA256_PUBLIC_KEY_BASE64 }}"'  copilot/fsd-frontend/manifest.yml

    - name: Inject RSA256_PRIVATE_KEY_BASE64 into manifest
      run: |
        yq -i '.variables.RSA256_PRIVATE_KEY_BASE64 = "${{ secrets.RSA256_PRIVATE_KEY_BASE64 }}"'  copilot/fsd-frontend/manifest.yml

    - name: Inject replacement image into manifest
      run: |
        yq -i '.image.location = "ghcr.io/communitiesuk/funding-service-frontend:latest"'  copilot/fsd-frontend/manifest.yml

    - name: Replace AUTHENTICATOR_HOST variable
      if: ${{ inputs.environment == 'prod' }}
      run: |
        yq -i '.variables.AUTHENTICATOR_HOST = "https://authenticator.${{ inputs.environment }}.levellingup.gov.uk"'  copilot/fsd-frontend/manifest.yml

    - name: Copilot deploy
      run: |
        copilot deploy --env ${{ inputs.environment || 'test' }}
