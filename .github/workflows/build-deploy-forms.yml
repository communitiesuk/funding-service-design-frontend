name: Build and deploy forms
on:
  workflow_dispatch:
  push:
    #  paths:
    #    - "form_jsons/**"
env:
  DOCKER_REGISTRY: ghcr.io
  IMAGE_NAME: "runner"
  IMAGE_REPO_PATH: "ghcr.io/${{github.repository}}"
jobs:
  setup-env-vars:
    runs-on: ubuntu-latest
    outputs:
      BRANCH_NAME: ${{steps.set-vars.outputs.LOWER_CASE_BRANCH}}
    steps:
      - id: set-vars
        run: |
          echo "::set-output name=LOWER_CASE_BRANCH::$(
            echo ${GITHUB_REF#refs/heads/} |
            tr "[:upper:]" "[:lower:]"
          )"
  docker-build:
    needs: setup-env-vars
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Docker metadata
        id: metadata
        uses: docker/metadata-action@v4
        with:
          images: ${{env.IMAGE_REPO_PATH}}/${{env.IMAGE_NAME}}
          tags: |
            type=sha,format=long
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
            type=ref,event=branch

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          tags: ${{ steps.metadata.outputs.tags}}
          labels: ${{ steps.metadata.outputs.labels }}
          push: true
          file: Dockerfile
          build-args: |
            COMMIT_SHA=:${{ github.sha }}

  deploy-and-test-dev:
    needs: docker-build
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v2

      - name: Deploy to Gov PaaS Dev
        uses: citizen-of-planet-earth/cf-cli-action@v2
        with:
          cf_api:      ${{secrets.CF_API}}
          cf_org:      ${{secrets.CF_ORG}}
          cf_space:    ${{secrets.CF_SPACE }}
          cf_username: ${{secrets.CF_USER}}
          cf_password: ${{secrets.CF_PASSWORD}}
          command: push funding-service-design-form-runner-dev --docker-image ${{env.IMAGE_REPO_PATH}}/${{env.IMAGE_NAME}}:sha-${{ github.sha }} -f ./manifest.yml --var RSA256_PUBLIC_KEY_BASE64="${{secrets.RSA256_PUBLIC_KEY_BASE64}}"

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.10.1
      - name: install dependencies
        run: python -m pip install --upgrade pip && python -m pip install -r requirements-dev.txt
      - name: build static assets
        run: python build.py
      - name: Install Chromium
        uses: browser-actions/setup-chrome@latest
      - name: Run tests
        env:
          # TODO Add in basic auth creds to URL when secret setup
          FORMS_SERVICE_PUBLIC_HOST: https://forms.dev.gids.dev/
        run: pytest tests/test_application_form.py

  deploy-and-test-test:
    needs: deploy-and-test-dev
    if: needs.setup-env-vars.outputs.BRANCH_NAME == 'main'
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v2

      - name: Deploy to Gov PaaS Test
        uses: citizen-of-planet-earth/cf-cli-action@v2
        with:
          cf_api:      ${{secrets.CF_API}}
          cf_org:      ${{secrets.CF_ORG}}
          cf_space:    ${{secrets.CF_SPACE }}
          cf_username: ${{secrets.CF_USER}}
          cf_password: ${{secrets.CF_PASSWORD}}
          command: push funding-service-design-form-runner-test --docker-image ${{env.IMAGE_REPO_PATH}}/${{env.IMAGE_NAME}}:sha-${{ github.sha }} -f ./manifest.yml --var RSA256_PUBLIC_KEY_BASE64="${{secrets.RSA256_PUBLIC_KEY_BASE64}}"

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.10.1
      - name: install dependencies
        run: python -m pip install --upgrade pip && python -m pip install -r requirements-dev.txt
      - name: build static assets
        run: python build.py
      - name: Install Chromium
        uses: browser-actions/setup-chrome@latest
      - name: Run tests
        env:
          FORMS_SERVICE_PUBLIC_HOST: https://${{secrets.BASIC_AUTH_USERNAME}}:${{secrets.BASIC_AUTH_PASSWORD}}@forms.dev.gids.dev
        run: pytest tests/test_application_form.py
