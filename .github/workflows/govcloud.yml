name: Deploy to Gov PaaS

on:
  workflow_dispatch:
    inputs:
      space:
        description: The space to deploy to
        required: true
        default: sandbox
      environment:
        description: The environment to deploy with
        required: true
        default: Dev
  push:
    paths-ignore:
      - "form_jsons/**"
      - "Dockerfile"
      - "manifest-form-runner.yml"
      - "build-deploy-forms.yml"
      - "**/README.md"
      - "docs/**"

env:
  if: ${{ github.actor != 'dependabot[bot]' }}
  # TODO: restore this to a custom domain once DNS is restored
  FORMS_SERVICE_PREVIEW_HOST: https://${{secrets.BASIC_AUTH_USERNAME}}:${{secrets.BASIC_AUTH_PASSWORD}}@forms.dev.gids.dev
  FORMS_SERVICE_PUBLIC_HOST: https://${{secrets.BASIC_AUTH_USERNAME}}:${{secrets.BASIC_AUTH_PASSWORD}}@forms.dev.gids.dev
  FORMS_SERVICE_HOST: https://${{secrets.BASIC_AUTH_USERNAME}}:${{secrets.BASIC_AUTH_PASSWORD}}@forms.dev.gids.dev
jobs:

  deploy-and-test-dev:
    if: ${{ github.actor != 'dependabot[bot]' }}
    runs-on: ubuntu-latest
    environment: Dev
    steps:
      - name: checkout code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.10.x
      - name: create python env
        run: python -m venv .venv
      - name: install dependencies
        run: source .venv/bin/activate && python -m pip install --upgrade pip && pip install -r requirements.txt
      - name: build static assets
        run: python build.py
      - name: Deploy to Gov PaaS
        uses: citizen-of-planet-earth/cf-cli-action@v2
        with:
          cf_api: ${{secrets.CF_API}}
          cf_org: ${{secrets.CF_ORG}}
          cf_space: ${{secrets.CF_SPACE }}
          cf_username: ${{secrets.CF_USER}}
          cf_password: ${{secrets.CF_PASSWORD}}
          # env vars required in the manifest must be declared here
          command: push -f manifest-dev.yml funding-service-design-frontend-dev --var SENTRY_DSN="${{secrets.SENTRY_DSN}}" --var FORMS_SERVICE_PRIVATE_HOST="${{secrets.FORMS_SERVICE_PRIVATE_HOST}}" --var RSA256_PUBLIC_KEY_BASE64="${{secrets.RSA256_PUBLIC_KEY_BASE64}}" --var GITHUB_SHA="${{ github.sha }}"
      - name: Run tests
        run: |
          python -m venv .venv
          source .venv/bin/activate && python -m pip install --upgrade pip && pip install -r requirements-dev.txt
          pytest
      - name: "Upload Accessibility Testing reports"
        uses: actions/upload-artifact@v2
        with:
          name: accessibility-test-report
          path: /home/runner/work/funding-service-design-design-frontend/funding-service-design-frontend/axe_reports/*.html
          retention-days: 5

  security:
    if: ${{ github.actor != 'dependabot[bot]' }}
    needs: deploy-and-test-dev
    runs-on: ubuntu-latest
    environment: Dev
    steps:
      - name: checkout code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.10.x
      - name: install dependencies
        run: python -m pip install --upgrade pip && python -m pip install -r requirements-dev.txt
      - name: Bandit
        run: bandit -r ./app
      - name: ZAP Scan
        uses: zaproxy/action-full-scan@v0.3.0
        with:
          target: "https://funding-service-design-frontend-dev.london.cloudapps.digital"
          allow_issue_writing: False

  deploy-and-test-test:
    if: ${{ github.actor != 'dependabot[bot]' && github.ref == 'refs/heads/main' }}
    needs: security
    runs-on: ubuntu-latest
    environment: test
    steps:
      - name: checkout code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.10.x
      - name: create python env
        run: python -m venv .venv
      - name: install dependencies
        run: source .venv/bin/activate && python -m pip install --upgrade pip && pip install -r requirements.txt
      - name: build static assets
        run: python build.py
      - name: Deploy to Gov PaaS
        uses: citizen-of-planet-earth/cf-cli-action@v2
        with:
          cf_api: ${{secrets.CF_API}}
          cf_org: ${{secrets.CF_ORG}}
          cf_space: ${{secrets.CF_SPACE }}
          cf_username: ${{secrets.CF_USER}}
          cf_password: ${{secrets.CF_PASSWORD}}
          # env vars required in the manifest must be declared here
          command: push -f manifest-test.yml funding-service-design-frontend-test --var SENTRY_DSN="${{secrets.SENTRY_DSN}}" --var RSA256_PUBLIC_KEY_BASE64="${{secrets.RSA256_PUBLIC_KEY_BASE64}}" --var FORMS_SERVICE_PRIVATE_HOST="${{secrets.FORMS_SERVICE_PRIVATE_HOST}}" --var GITHUB_SHA="${{ github.sha }}"
      - name: Run tests
        env:
          # TODO: restore this to a custom domain once DNS is restored
          FORMS_SERVICE_PREVIEW_HOST: https://${{secrets.BASIC_AUTH_USERNAME}}:${{secrets.BASIC_AUTH_PASSWORD}}@forms.test.gids.dev
          FORMS_SERVICE_PUBLIC_HOST: https://${{secrets.BASIC_AUTH_USERNAME}}:${{secrets.BASIC_AUTH_PASSWORD}}@forms.test.gids.dev
          FORMS_SERVICE_HOST: https://${{secrets.BASIC_AUTH_USERNAME}}:${{secrets.BASIC_AUTH_PASSWORD}}@forms.test.gids.dev
        run: |
          python -m venv .venv
          source .venv/bin/activate && python -m pip install --upgrade pip && pip install -r requirements-dev.txt
          pytest
      - name: "Upload Accessibility Testing reports"
        uses: actions/upload-artifact@v2
        with:
          name: accessibility-test-report
          path: /home/runner/work/funding-service-design-design-frontend/funding-service-design-frontend/axe_reports/*.html
          retention-days: 5


  run_performance_tests:
    if: ${{ github.actor != 'dependabot[bot]' && github.ref == 'refs/heads/main' }}
    needs: deploy-and-test-test
    runs-on: ubuntu-latest
    environment: test
    steps:
      - name: checkout code
        uses: actions/checkout@main
        with:
          repository: communitiesuk/funding-service-design-performance-tests
          path: ./funding-service-design-performance-tests
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.10.x
      - name: create python env
        run: python -m venv .venv
      - name: install dependencies
        run: source .venv/bin/activate && python -m pip install --upgrade pip && pip install -r ./funding-service-design-performance-tests/requirements.txt

      - name: Run performance tests
        run: ls && python -m pip install locust && python -m locust
        working-directory: ./funding-service-design-performance-tests
      - name: "Upload Artifact"
        uses: actions/upload-artifact@v2
        with:
          name: performance-test-report
          path: ./funding-service-design-performance-tests/locust_html_report.html
          retention-days: 5
